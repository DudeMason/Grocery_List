{"ast":null,"code":"import _objectSpread from \"/Users/gabriellaalgecera/Desktop/Grocery_List/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/gabriellaalgecera/Desktop/Grocery_List/client/src/App.js\";\nimport React, { Component } from 'react';\nimport List from './components/List';\nimport GroceryForm from './components/GroceryForm';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      edit: false,\n      items: [{\n        id: 1,\n        itemName: \"Milk\",\n        price: '2',\n        completed: false\n      }, {\n        id: 2,\n        itemName: \"Cereal\",\n        price: '3',\n        completed: false\n      }, {\n        id: 3,\n        itemName: \"Apples\",\n        price: '.50',\n        completed: false\n      }]\n    };\n\n    this.toggleEdit = () => {\n      this.setState({\n        edit: !this.state.edit\n      });\n    };\n\n    this.removeItem = id => {\n      const newItems = this.state.items.filter(item => {\n        if (item.id !== id) {\n          return item;\n        }\n\n        return null;\n      });\n      this.setState({\n        items: [...newItems]\n      });\n    };\n\n    this.completeItems = id => {\n      const items = this.state.items;\n      this.setState({\n        items: items.map(item => {\n          if (item.id === id) {\n            return _objectSpread({}, item, {\n              completed: !item.completed,\n              deletable: !item.deletable\n            });\n          }\n\n          return item;\n        })\n      });\n    };\n\n    this.getUniqId = () => {\n      //NOTE We are just using this as a helper function for id's since we aren't using a db yet\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    };\n\n    this.addItem = itemAdded => {\n      const items = this.state.items;\n\n      const newItem = _objectSpread({\n        id: this.getUniqId()\n      }, itemAdded);\n\n      this.setState({\n        items: [newItem, ...items]\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        backgroundColor: 'navy',\n        padding: '10px 10px 100px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(List, {\n      items: this.state.items,\n      completeItems: this.completeItems,\n      removeItem: this.removeItem,\n      toggleEdit: this.toggleEdit,\n      edit: this.state.edit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(GroceryForm, {\n      addItem: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  }\n\n}\n\nString.prototype.capitalize = function () {\n  return this.charAt(0).toUpperCase() + this.slice(1);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/gabriellaalgecera/Desktop/Grocery_List/client/src/App.js"],"names":["React","Component","List","GroceryForm","App","state","edit","items","id","itemName","price","completed","toggleEdit","setState","removeItem","newItems","filter","item","completeItems","map","deletable","getUniqId","Math","floor","random","toString","substring","addItem","itemAdded","newItem","render","backgroundColor","padding","String","prototype","capitalize","charAt","toUpperCase","slice"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport List from './components/List';\nimport GroceryForm from './components/GroceryForm';\nimport './App.css';\n\nclass App extends Component {\n\n  state = { edit: false, items: [\n    {id: 1, itemName: \"Milk\", price: '2', completed: false},\n    {id: 2, itemName: \"Cereal\", price: '3', completed: false},\n    {id: 3, itemName: \"Apples\", price: '.50', completed: false}\n      ]\n    }\n\n    toggleEdit = () => {\n      this.setState({ edit: !this.state.edit })\n    }\n\n    removeItem = (id) => {\n      const newItems = this.state.items.filter(item => {\n        if (item.id !== id) {\n          return item\n        }\n          return null\n      })\n      this.setState({ items: [...newItems] })\n    }\n\n    completeItems = (id) => {\n        const {items} = this.state\n\n        this.setState({\n          items: items.map( item => {\n            if (item.id === id) {\n              return {\n                ...item,\n                completed: !item.completed,\n                deletable: !item.deletable\n              }\n            }\n            return item\n          })\n        })\n      }\n\n    getUniqId = () => {\n       //NOTE We are just using this as a helper function for id's since we aren't using a db yet\n       return Math.floor((1 + Math.random()) * 0x10000)\n         .toString(16)\n         .substring(1);\n      }\n\n    addItem = (itemAdded) => {\n      const {items} = this.state\n\n      const newItem = {id: this.getUniqId(), ...itemAdded}\n      this.setState({ items: [newItem, ...items] })\n    }\n\n    render() {\n\n      return(\n        <div style={{\n          backgroundColor: 'navy',\n          padding: '10px 10px 100px',\n          }}>\n          <List\n            items={this.state.items}\n            completeItems={this.completeItems}\n            removeItem={this.removeItem}\n            toggleEdit={this.toggleEdit}\n            edit={this.state.edit}/>\n          <GroceryForm addItem={this.addItem}/>\n        </div>\n      )\n    }\n  }\n\n  String.prototype.capitalize = function() {\n      return this.charAt(0).toUpperCase() + this.slice(1);\n  }\n\n  export default App;\n"]},"metadata":{},"sourceType":"module"}
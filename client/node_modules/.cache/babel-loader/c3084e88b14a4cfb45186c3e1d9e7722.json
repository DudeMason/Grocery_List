{"ast":null,"code":"var _jsxFileName = \"/Users/gabriellaalgecera/Desktop/Grocery_List/client/src/components/Name.js\";\nimport React, { Component } from 'react';\n\nclass Name extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: \"Grocery List\",\n      isInEditMode: false\n    };\n\n    this.changeEditMode = () => {\n      this.setState({\n        isInEditMode: !this.state.isInEditMode\n      });\n    };\n\n    this.updateTitleValue = () => {\n      this.setState({\n        isInEditMode: false,\n        value: this.refs.theTextInput.value\n      });\n    };\n\n    this.renderEditView = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: this.state.value,\n        ref: \"theTextInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.changeEditMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"X\"), React.createElement(\"button\", {\n        onClick: this.updateTitleValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"\\u2713\"));\n    };\n\n    this.renderDefaultView = () => {\n      return React.createElement(\"div\", {\n        onDoubleClick: this.changeEditMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.state.value);\n    };\n  }\n\n  render() {\n    return this.state.isInEditMode ? this.renderEditView() : this.renderDefaultView();\n  }\n\n}\n\nexport default Name;","map":{"version":3,"sources":["/Users/gabriellaalgecera/Desktop/Grocery_List/client/src/components/Name.js"],"names":["React","Component","Name","state","value","isInEditMode","changeEditMode","setState","updateTitleValue","refs","theTextInput","renderEditView","renderDefaultView","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAE7BE,KAF6B,GAErB;AACJC,MAAAA,KAAK,EAAE,cADH;AAEJC,MAAAA,YAAY,EAAE;AAFV,KAFqB;;AAAA,SAO7BC,cAP6B,GAOZ,MAAM;AACnB,WAAKC,QAAL,CAAc;AACVF,QAAAA,YAAY,EAAE,CAAC,KAAKF,KAAL,CAAWE;AADhB,OAAd;AAGH,KAX4B;;AAAA,SAa7BG,gBAb6B,GAaV,MAAM;AACrB,WAAKD,QAAL,CAAc;AACVF,QAAAA,YAAY,EAAE,KADJ;AAEVD,QAAAA,KAAK,EAAE,KAAKK,IAAL,CAAUC,YAAV,CAAuBN;AAFpB,OAAd;AAIH,KAlB4B;;AAAA,SAoB7BO,cApB6B,GAoBZ,MAAM;AACnB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACP;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,YAAY,EAAE,KAAKR,KAAL,CAAWC,KAFzB;AAGA,QAAA,GAAG,EAAC,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADO,EAMP;AAAQ,QAAA,OAAO,EAAE,KAAKE,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANO,EAOP;AAAQ,QAAA,OAAO,EAAE,KAAKE,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPO,CAAP;AASH,KA9B4B;;AAAA,SAgC7BI,iBAhC6B,GAgCT,MAAM;AACtB,aAAO;AAAK,QAAA,aAAa,EAAE,KAAKN,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN,KAAKH,KAAL,CAAWC,KADL,CAAP;AAGH,KApC4B;AAAA;;AAsC7BS,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKV,KAAL,CAAWE,YAAX,GACP,KAAKM,cAAL,EADO,GAEP,KAAKC,iBAAL,EAFA;AAGH;;AA1C4B;;AA8C7B,eAAeV,IAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Name extends Component {\n\nstate = {\n    value: \"Grocery List\",\n    isInEditMode: false\n}\n\nchangeEditMode = () => {\n    this.setState({\n        isInEditMode: !this.state.isInEditMode\n    })\n}\n\nupdateTitleValue = () => {\n    this.setState({\n        isInEditMode: false,\n        value: this.refs.theTextInput.value\n    })\n}\n\nrenderEditView = () => {\n    return <div>\n    <input\n    type=\"text\"\n    defaultValue={this.state.value}\n    ref=\"theTextInput\"\n    />\n    <button onClick={this.changeEditMode}>X</button>\n    <button onClick={this.updateTitleValue}>âœ“</button>\n    </div>\n}\n\nrenderDefaultView = () => {\n    return <div onDoubleClick={this.changeEditMode}>\n    {this.state.value}\n    </div>\n}\n\nrender() {\n    return this.state.isInEditMode ?\n    this.renderEditView() :\n    this.renderDefaultView()\n}\n\n}\n\nexport default Name;\n"]},"metadata":{},"sourceType":"module"}